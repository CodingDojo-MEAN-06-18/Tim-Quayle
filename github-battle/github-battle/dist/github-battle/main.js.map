{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/battle.service.ts","webpack:///./src/app/battleground/battleground.component.css","webpack:///./src/app/battleground/battleground.component.html","webpack:///./src/app/battleground/battleground.component.ts","webpack:///./src/app/battleresults/battleresults.component.css","webpack:///./src/app/battleresults/battleresults.component.html","webpack:///./src/app/battleresults/battleresults.component.ts","webpack:///./src/app/rankings/rankings.component.css","webpack:///./src/app/rankings/rankings.component.html","webpack:///./src/app/rankings/rankings.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { BattlegroundComponent } from './battleground/battleground.component';\nimport { RankingsComponent } from './rankings/rankings.component';\nimport { BattleresultsComponent } from './battleresults/battleresults.component';\nconst routes: Routes = [{ path: '', component:  BattlegroundComponent },\n{ path: 'rankings', component:   RankingsComponent },\n{ path: 'results', component:  BattleresultsComponent },\n                        \n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","module.exports = \"\"","module.exports = \"<h1> GitHub Battle</h1> <a [routerLink]=\\\"['']\\\">Battle</a> |  <a [routerLink]=\\\"['rankings']\\\">Rankings</a> \\n<router-outlet ></router-outlet>\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'app';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { BattleService } from './battle.service';\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { HttpClientModule } from '@angular/common/http';\nimport { BattlegroundComponent } from './battleground/battleground.component';\nimport { RankingsComponent } from './rankings/rankings.component';\nimport { BattleresultsComponent } from './battleresults/battleresults.component';\nimport { FormsModule } from '@angular/forms';\n@NgModule({\n  declarations: [\n    AppComponent,\n    BattlegroundComponent,\n    RankingsComponent,\n    BattleresultsComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    HttpClientModule,\n    FormsModule\n    \n  ],\n  providers: [BattleService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class BattleService {\n  \n  players = {};\n      winner = {name: '',\n            score: 0,\n            pic: ''};\n      loser = {name: '',\n            score: 0,\n            pic: ''};\n\n  constructor(private _http: HttpClient) { }\n  githubInfo = function(username){\n   return this._http.get(`https://api.github.com/users/${username}`)\n  }\n  battle(user1, user2){\n   console.log(user1);\n  this.winner = {... ((user1.score > user2.score) ? user1: user2)}\n  this.loser = {... ((user1.score > user2.score) ? user2: user1)}      \n  console.log(\"loser\",this.loser.name);  \n  console.log(\"winner\",this.winner.name);\n          this.players =  {winner: this.winner,loser: this.loser}\n                 console.log(\"PLAYERS\",this.players)\n}\n                \n            getPlayers(){\n              return this.players;\n            }\n          \n            addScore(user){\n              console.log(\"IN POST DATA SERVICE\")\n              this._http.post('/addscore', user).subscribe(\n                (data) =>{\n                  console.log(\"success!\");\n                       },\n                (err) => { console.log(err);}\n              )}\n              \n              getScores() :any{\n                console.log(\"GETscores!\")\n                return this._http.get('/getscores');\n                             }\n          \n          }\n","module.exports = \".playsect{\\r\\n    height:200px;\\r\\n    width:350px;\\r\\n    display:inline-block;\\r\\n    vertical-align:top;\\r\\n}\\r\\nimg{\\r\\n    height:100px;\\r\\n    width:100px;\\r\\n}\\r\\n.batbut{\\r\\n    display:block;\\r\\n}\\r\\n.batbut button{\\r\\n   background-color:orange;\\r\\n    width:500px;\\r\\n}\\r\\n.err{\\r\\n    color:red;\\r\\n}\"","module.exports = \"\\n <div class=\\\"playsect\\\">\\n<div *ngIf=\\\"!sub1 || errorflag2\\\">\\n<h1> Player 1</h1>\\n<form (submit)=\\\"onSubmit1($event,myForm1)\\\" #myForm1='ngForm'>\\n <div class=\\\"err\\\" *ngIf=\\\"xx && errorflag2\\\"> GitHub user name not found, please choose another</div>\\n  <p><label for=\\\"uname1\\\">GitHub Username: </label><input  name=\\\"username1\\\" id=\\\"uname1\\\" type=\\\"text\\\"\\n    [ngModel]=\\\"uname1\\\" \\n    required\\n    #username1=\\\"ngModel\\\"></p>\\n   \\n    <button [disabled]=\\\"!myForm1.valid\\\" >Get User</button>\\n  </form>\\n </div>\\n  \\n <div *ngIf=\\\"sub1 && !errorflag2\\\">\\n    <img src={{user1pic}}>\\n    <p>{{user1login}}</p>\\n    \\n    </div>\\n</div>\\n  \\n\\n\\n<div class=\\\"playsect\\\">\\n    <div *ngIf=\\\"!sub2|| errorflag\\\">\\n    <h1> Player 2</h1>\\n    <form (submit)=\\\"onSubmit2($event,myForm2)\\\" #myForm2='ngForm'>\\n      <div class=\\\"err\\\" *ngIf=\\\"x && errorflag\\\"> GitHub user name not found, please choose another</div>\\n      <p><label for=\\\"uname2\\\">GitHub Username: </label><input  name=\\\"username2\\\" id=\\\"uname2\\\" type=\\\"text\\\"\\n        [ngModel]=\\\"uname2\\\" \\n        required\\n        #username2=\\\"ngModel\\\"></p>\\n        <button [disabled]=\\\"!myForm2.valid\\\" >Get User</button>\\n      </form>\\n      </div>\\n      <div *ngIf=\\\"sub2 && !errorflag\\\">\\n          <img src={{user2pic}}>\\n          <p>{{user2login}}</p>\\n       \\n        </div>\\n      </div>\\n    <div class='batbut'>\\n      <button (click)=\\\"battleMe()\\\" [hidden]=\\\"!sub1 || !sub2 || errorflag || errorflag2\\\">Battle!</button>\\n      </div>\"","import { Component, OnInit } from '@angular/core';\nimport { FormsModule } from '@angular/forms';\nimport {NgForm} from '@angular/forms';\nimport { BattleService } from '../battle.service';\nimport {Router} from \"@angular/router\";\n@Component({\n  selector: 'app-battleground',\n  templateUrl: './battleground.component.html',\n  styleUrls: ['./battleground.component.css']\n})\nexport class BattlegroundComponent implements OnInit {\nsub1=false;\nuser1login: string = '';\nuser1pic: string ='';\nsub2=false;\nuser2login: string = '';\nuser2pic: string ='';\nscore1: number =0;\nscore2: number =0;\n//user=false;\nerrorflag=false;\nerrorflag2=false;\nx=false;\nxx=false;\nconstructor(private _dataService: BattleService,\n              private _router: Router) { }\n\n  ngOnInit() {\n  }\n\n\n  onSubmit1(event: Event, form: NgForm){\n    \n    event.preventDefault();\n    \n    this.sub1=true;\n    let foo = this._dataService.githubInfo(form.value.username1);\n    console.log(foo);     \n    this.xx=true;\n    foo.subscribe(\n      (response) => {\n         this.errorflag2=false;\n        \n          this.score1 = response['public_repos']+response['followers'];\n          this.score1= this.score1*12;\n          this.user1pic= response['avatar_url']\n          this.user1login= response['login']\n          console.log(\"SCORE\",this.score1);\n                         \n        },\n       (err) => { this.errorflag2=true; this.sub1=false;}\n      )\n      this.errorflag2=false;\n      form.reset();  \n                                                             }   \n onSubmit2(event: Event, form: NgForm){\nthis.x=true;\n  event.preventDefault();\n    this.sub2=true;\n    let foo = this._dataService.githubInfo(form.value.username2);\n                    \n    foo.subscribe(\n        (response) => {\n          this.errorflag=false;\n          console.log('we are here!');\n          this.score2 = response['public_repos']+response['followers'];\n          this.score2=this.score2*12;\n          this.user2pic= response['avatar_url']\n          this.user2login= response['login']\n          console.log(\"SCORE2\",this.score2);\n                         \n        },\n        (err) => {this.errorflag=true; console.log(err);}\n      );\n      this.errorflag=false;\n      form.reset();  \n                                                             }   \nbattleMe(){\n console.log(\"BATTLE!!\")\n  let user1 = {\n   name: this.user1login,\n   score: this.score1,\n   pic: this.user1pic\n\n  }\n  let user2 = {\n    name: this.user2login,\n    score: this.score2,\n    pic: this.user2pic\n \n   }\n   this._dataService.battle(user1, user2);\n   this._router.navigate(['/results'])\n  }\n\n\n}\n","module.exports = \"img{\\r\\n    height:100px;\\r\\n    width:100px;\\r\\n}\\r\\n.first{\\r\\n    color: green;\\r\\n\\r\\n}\\r\\n.second{\\r\\n    color:red;\\r\\n}\"","module.exports = \"<div class='first'>\\n  <h1>1st Place</h1>\\n<h2>{{players['winner'].name}} (Score: {{players['winner'].score}})</h2>\\n</div>\\n<img src='{{userpic}}'>\\n<div class='second'>\\n<h1>2nd Place</h1>\\n<h2>{{players['loser'].name}} (Score: {{players['loser'].score}})</h2>\\n</div>\\n<a [routerLink]=\\\"['']\\\">Reset</a>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { BattleService } from '../battle.service';\n@Component({\n  selector: 'app-battleresults',\n  templateUrl: './battleresults.component.html',\n  styleUrls: ['./battleresults.component.css']\n})\nexport class BattleresultsComponent implements OnInit {\n\n  constructor(private _dataService: BattleService) { }\n  userpic='';\n  players = {};\n  ngOnInit() {\n    this.players = this._dataService.getPlayers();\n    this.userpic = this.players['winner'].pic;\n    console.log(\"RESULTS \",this.players['loser'].name);\n    //this._dataService.addScore(this.players['winner']);\n    this._dataService.addScore(this.players);\n  }\n  \n\n\n}\n","module.exports = \"img{\\r\\n    height:100px;\\r\\n    width:100px;\\r\\n    display:inline-block;\\r\\n    vertical-align:top;\\r\\n}\\r\\n.profile{\\r\\n    height:150px;\\r\\n    width:500px;\\r\\n    border: 2px solid black;\\r\\n}\\r\\n.rank{\\r\\n    width:20px;\\r\\n    height:100px;\\r\\n    display:inline-block;\\r\\n}\\r\\n.score{\\r\\n    width:100px;\\r\\n    height:100px;\\r\\n    display:inline-block;\\r\\n    vertical-align:top;\\r\\n    margin-left:250px;\\r\\n}\\r\\n.leaders{\\r\\n    width: 700px;\\r\\n    height: 500px;\\r\\n    overflow: scroll;\\r\\n}\"","module.exports = \"<h1>Rankings</h1>\\n<div class=\\\"leaders\\\">\\n<div *ngFor=\\\"let player of players;let i = index\\\" [attr.data-index]=\\\"i\\\">\\n<div class=\\\"profile\\\">\\n<div class=\\\"rank\\\"> <h1>{{i+1}}</h1> </div>\\n  \\n<img src=\\\"{{player.pic}}\\\">\\n<div class=\\\"score\\\"> <h2>  Score:{{player.score}}</h2> </div>\\n  <h3> {{player.name}} </h3>  \\n</div>\\n</div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport {BattleService} from '../battle.service';\n@Component({\n  selector: 'app-rankings',\n  templateUrl: './rankings.component.html',\n  styleUrls: ['./rankings.component.css']\n})\nexport class RankingsComponent implements OnInit {\n  players = [];\n  constructor(private _dataService: BattleService) { }\n\n  ngOnInit() {\n    this._dataService.getScores()\n    .subscribe(response =>{\n     this.players=response;\n     console.log(\"THIS IS RESPONSE\",response);\n     \n     this.players.sort(function (a, b) {\n      return b.score - a.score;\n    });\n    \n\n\n\n    })\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}